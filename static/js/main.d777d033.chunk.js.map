{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","serviceWorker.js","index.js"],"names":["Card","_ref","obj","type","react_default","a","createElement","className","title","concat","episode_id","director","release_date","name","height","mass","hair_color","climate","terrain","population","classification","language","average_lifespan","model","manufacturer","cost_in_credits","CardList","objects","route","map","i","components_Card","key","SearchBox","searchField","searchChange","placeholder","onChange","Scroll","props","console","log","style","overflowY","border","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchfield","target","value","onSelection","fetch","then","response","json","data","results","selected","state","menu","_this2","filteredObjs","filter","toLowerCase","includes","onClick","components_SearchBox","components_Scroll","components_CardList","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d777d033.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ obj, type }) => { //destructuring in the brackets\r\n\r\n\tswitch (type) {\r\n\tcase 'films': {\r\n\t\treturn (\r\n\t\t<div className='tc bg-light-yellow dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{obj.title}</h2>\r\n\t\t\t\t<h4>{`Episode: ${obj.episode_id}`}</h4>\r\n\t\t\t\t<h4>{`Director: ${obj.director}`}</h4>\r\n\t\t\t\t<h4>{`Release date: ${obj.release_date}`}</h4>\r\n\t\t\t</div>\r\n\t\t</div>\t\t\r\n\t\t);\r\n\t}\r\n\tcase 'people': {\r\n\t\treturn (\r\n\t\t<div className='tc bg-light-yellow dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{obj.name}</h2>\r\n\t\t\t\t<h4>{`Height: ${obj.height} cm`}</h4>\r\n\t\t\t\t<h4>{`Weight: ${obj.mass} kg`}</h4>\r\n\t\t\t\t<h4>{`Hair color: ${obj.hair_color}`}</h4>\r\n\t\t\t</div>\r\n\t\t</div>\t\t\r\n\t\t);\r\n\t}\r\n\tcase 'planets': {\r\n\t\treturn (\r\n\t\t<div className='tc bg-light-yellow dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{obj.name}</h2>\r\n\t\t\t\t<h4>{`Climate: ${obj.climate}`}</h4>\r\n\t\t\t\t<h4>{`Terrain: ${obj.terrain}`}</h4>\r\n\t\t\t\t<h4>{`Population: ${obj.population}`}</h4>\r\n\t\t\t</div>\r\n\t\t</div>\t\t\r\n\t\t);\r\n\t}\r\n\tcase 'species': {\r\n\t\treturn (\r\n\t\t<div className='tc bg-light-yellow dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{obj.name}</h2>\r\n\t\t\t\t<h4>{`Classification: ${obj.classification}`}</h4>\r\n\t\t\t\t<h4>{`Language: ${obj.language}`}</h4>\r\n\t\t\t\t<h4>{`Average lifespan: ${obj.average_lifespan}`}</h4>\r\n\t\t\t</div>\r\n\t\t</div>\t\t\r\n\t\t);\r\n\t}\r\n\tcase 'starships': {\r\n\t\treturn (\r\n\t\t<div className='tc bg-light-yellow dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{obj.name}</h2>\r\n\t\t\t\t<h4>{`Model: ${obj.model}`}</h4>\r\n\t\t\t\t<h4>{`Manufacturer: ${obj.manufacturer}`}</h4>\r\n\t\t\t\t<h4>{`Cost: ${obj.cost_in_credits} Credits`}</h4>\r\n\t\t\t</div>\r\n\t\t</div>\t\t\r\n\t\t);\r\n\t}\r\n\tcase 'vehicles': {\r\n\t\treturn (\r\n\t\t<div className='tc bg-light-yellow dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{obj.name}</h2>\r\n\t\t\t\t<h4>{`Model: ${obj.model}`}</h4>\r\n\t\t\t\t<h4>{`Manufacturer: ${obj.manufacturer}`}</h4>\r\n\t\t\t\t<h4>{`Cost: ${obj.cost_in_credits} Credits`}</h4>\r\n\t\t\t</div>\r\n\t\t</div>\t\t\r\n\t\t);\r\n\t}\r\n\t}\r\n}\r\n\r\n/*switch(variable_expression) { \r\n   case constant_expr1: { \r\n      //statements; \r\n      break; \r\n   } \r\n   case constant_expr2: { \r\n      //statements;\r\n      break; \r\n   } \r\n   default: { \r\n      //statements; \r\n      break; \r\n   } \r\n\r\n}*/\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n//props -> robots as input\r\n\r\nconst CardList = ({ objects, route }) =>{ //pure function, deterministic \r\n// try adding an array for the menu names and image url-s to the app.js and create cards with those when nothing is selected - 27/11/2018\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tobjects.map((obj, i) =>{\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t key={i}\r\n\t\t\t\t\t\t\t obj={obj}\r\n\t\t\t\t\t\t\t type={route}\r\n\t\t\t\t \t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t<input className='pa3 ba b--green bg-washed-red'\r\n\t\ttype='search'\r\n\t\tplaceholder='Search'\r\n\t\tonChange={searchChange}\r\n\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n//children - scroll can use children to render its children\r\n\r\nconst Scroll = (props) => {\r\n\tconsole.log(props);\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n\r\n\r\nimport './App.css';\r\n//props -> robots as input\r\n//STATE - an object that describes our app\r\n//children receive the STATE as props\r\n\r\nclass App extends Component { // smart component bc it has state (containers)\r\n\tconstructor() {// state describes our app, things that can change an d affect the app\r\n\t\tsuper()\r\n\t\tthis.state = { // the virtual dom collects this and react uses it to render and pass them as props to components\r\n\t\t\tmenu: ['Films', 'People', 'Planets', 'Species', 'Starships', 'Vehicles'],\r\n\t\t\tobjects: [],\r\n\t\t\tsearchfield: '',\r\n\t\t\tselected: ''\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value} )\r\n\t}\r\n\r\n\tonSelection = (route) => {\r\n\t\tfetch(`https://swapi.co/api/${route}`) // fetch is a function of window, it fetches a json object\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => this.setState( {objects: data.results, selected: route} ));\r\n  \t}\r\n\r\n\trender() {\t// TRY MAKING ARRAYS FOR EVERYTHING AND FILL THEM WITH THE CORRESPONDING DATA WHEN LOADING THE PAGE - 25/1/2018\r\n\r\n\t\tif (this.state.selected === 'films') {\r\n\t\t\tvar filteredObjs = this.state.objects.filter(obj => {\r\n\t\t\t\treturn obj.title.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t\t});\t\r\n\t\t} else {\r\n\t\t\tvar filteredObjs = this.state.objects.filter(obj => {\r\n\t\t\t\treturn obj.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t\t});\r\n\t\t}\r\n\r\n\r\n\t\tif (this.state.selected === '') { // tried putting buttons in a component, and calling 'onSelection' from there, but got TypeError 'onSelection is not a funciton'\r\n\t\t\treturn(\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'>Star Wars</h1>\r\n\t\t\t\t<h3>Choose a category to browse or search</h3>\r\n\t\t\t\t\t<div className=\"mw5 mw7-ns center pa3 ph5-ns\">\r\n\t\t\t          <button className=\"tc bg-light-yellow dib br3 pa5 ma2 grow bw2 shadow-5\" onClick={ () => this.onSelection('films')}>Films</button>\r\n\t\t\t          <button className=\"tc bg-light-yellow dib br3 pa5 ma2 grow bw2 shadow-5\" onClick={ () => this.onSelection('people')}>People</button>\r\n\t\t\t          <button className=\"tc bg-light-yellow dib br3 pa5 ma2 grow bw2 shadow-5\" onClick={ () => this.onSelection('planets')}>Planets</button>\r\n\t\t\t          <button className=\"tc bg-light-yellow dib br3 pa5 ma2 grow bw2 shadow-5\" onClick={ () => this.onSelection('species')}>Species</button>\r\n\t\t\t          <button className=\"tc bg-light-yellow dib br3 pa5 ma2 grow bw2 shadow-5\" onClick={ () => this.onSelection('starships')}>Starships</button>\r\n\t\t\t          <button className=\"tc bg-light-yellow dib br3 pa5 ma2 grow bw2 shadow-5\" onClick={ () => this.onSelection('vehicles')}>Vehicles</button>\r\n\t\t\t          \r\n\t        \t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else { // filteredObjs is undefined and i dont now why - 22/11/2018\r\n\t\t\treturn(\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1' >Star Wars</h1>\r\n\t\t\t\t\t<div>\r\n\t\t\t          <button className=\"f6 link dim ph3 pv2 mb2 dib white ma2 bg-black\" onClick={ () => this.onSelection('films')}>Films</button>\r\n\t\t\t          <button className=\"f6 link dim ph3 pv2 mb2 dib white ma2 bg-black\" onClick={ () => this.onSelection('people')}>People</button>\r\n\t\t\t          <button className=\"f6 link dim ph3 pv2 mb2 dib white ma2 bg-black\" onClick={ () => this.onSelection('planets')}>Planets</button>\r\n\t\t\t          <button className=\"f6 link dim ph3 pv2 mb2 dib white ma2 bg-black\" onClick={ () => this.onSelection('species')}>Species</button>\r\n\t\t\t          <button className=\"f6 link dim ph3 pv2 mb2 dib white ma2 bg-black\" onClick={ () => this.onSelection('starships')}>Starships</button>\r\n\t\t\t          <button className=\"f6 link dim ph3 pv2 mb2 dib white ma2 bg-black\" onClick={ () => this.onSelection('vehicles')}>Vehicles</button>\r\n\t\t        \t</div>\t\t\t\t\t\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll> \r\n\t\t\t\t\t<CardList objects={filteredObjs} route={this.state.selected}/>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default App;\r\n\r\n//if objects is empty and route is empty display h1, h2 and navigation\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Card from './Card'; // a component is always capitalized\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\nReactDOM.render(\n\t<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}